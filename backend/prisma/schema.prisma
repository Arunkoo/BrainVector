// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  Admin
  User
}
enum WorkspaceRole{
  Owner //creator of the workspace..
  Admin //can manage members, documnets..
  Editor //can create/edit the docs..
  Viewer //can only read docs..
}

model User {
  id  String @id @default(uuid())
  name String?
  email String @unique
  passwordhash String
  role Role @default(User)

  //relations..
  ownedWorkspaces Workspace[] @relation("WorkspaceOwner")
  workspacesMembers WorkspaceMember[]
  documents Document[] @relation("UserDocuments")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//workspace model..
model Workspace{
  id String @id @default(uuid())
  name String

  //relations..
  ownerId String   //foreign key..
  owner User @relation("WorkspaceOwner", fields: [ownerId], references: [id])
  members WorkspaceMember[]
  documents Document[] @relation("WorkspaceDocuments")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkspaceMember{
  id   String  @id @default(uuid())
  role WorkspaceRole @default(Viewer)

  //relations..
  userId String
  WorkspaceId String
  user User @relation(fields: [userId], references: [id])
  workspace Workspace @relation(fields: [WorkspaceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, WorkspaceId])

  
}

//Document model... 

model Document{
  id String @id @default(uuid())
  title String
  content String

  //relations..
  workspaceId String
  workspace Workspace @relation("WorkspaceDocuments", fields: [workspaceId], references: [id])
  createdById String
  createdBy User @relation("UserDocuments", fields: [createdById], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}