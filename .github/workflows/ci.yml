name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://arun:12arun@localhost:5432/BrainVector
      NODE_ENV: test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REDIS_HOST: redis
      REDIS_PORT: 6379

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: arun
          POSTGRES_PASSWORD: 12arun
          POSTGRES_DB: BrainVector
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U arun -d BrainVector"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Backend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Setup Prisma
        working-directory: backend
        run: |
          npx prisma generate
          npx prisma migrate deploy

      - name: Lint code
        working-directory: backend
        run: npm run lint

      - name: Run E2E tests
        working-directory: backend
        run: npm run test:e2e

  frontend:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

          cache-dependency-path: Client/package-lock.json

      - name: Install frontend dependencies
        working-directory: Client
        run: npm ci

      - name: Lint frontend
        working-directory: Client
        run: npm run lint

      - name: Type Check (Ts)
        working-directory: Client
        run: npm run type-check

      - name: Build frontend
        working-directory: Client
        run: npm run build
